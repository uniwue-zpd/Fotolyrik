services:
  frontend:
    image: fotolyrik_frontend
    container_name: frontend
    build:
      context: ./fotolyrik_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

  backend:
    image: fotolyrik_backend
    container_name: backend
    build:
      context: ./fotolyrik_backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:17-alpine
    container_name: fotolyrik_db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      # In case you have a database dump, uncomment the following line and change the file name
      # - ./<your_dump>.sql:/docker-entrypoint-initdb.d/<your_dump>.sql
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}" ]
      interval: 15s
      retries: 5
      start_period: 10s
